name: CI with SonarCloud

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  # Server Backend Job
  server:
    name: Server - Build, Test, and Analyze
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for SonarCloud

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install server dependencies
        run: npm install --omit=optional --no-audit

      - name: Run server tests with coverage
        run: npm run test -- --coverage

      - name: SonarCloud Scan for Server
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: server
          args: >
            -Dsonar.projectKey=Kachielite_insight-hub
            -Dsonar.organization=kachielite
            -Dsonar.qualitygate.wait=true
            -Dsonar.scm.disabled=true
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=**/*.test.ts,**/*.spec.ts,**/tests/**/*
            -Dsonar.exclusions=**/node_modules/**,**/coverage/**,**/dist/**
            -Dsonar.sources=.
            -Dsonar.verbose=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Client Frontend Job (placeholder for future)
  client:
    name: Client - Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Check if client has package.json
        id: check-client
        run: |
          if [ -f "package.json" ]; then
            echo "has_package=true" >> $GITHUB_OUTPUT
          else
            echo "has_package=false" >> $GITHUB_OUTPUT
          fi

      - name: Install client dependencies
        if: steps.check-client.outputs.has_package == 'true'
        run: npm ci --ignore-optional --no-audit --no-fund

      - name: Run client tests
        if: steps.check-client.outputs.has_package == 'true'
        run: npm test

      - name: Build client
        if: steps.check-client.outputs.has_package == 'true'
        run: npm run build

      - name: Skip client (no significant code yet)
        if: steps.check-client.outputs.has_package == 'false'
        run: echo "Client has no package.json - skipping client build and tests"

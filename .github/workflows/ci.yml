name: CI with SonarCloud

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  # Server Backend Job
  server-analysis:
    name: Server - Build, Test, and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for SonarCloud

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install server dependencies
        working-directory: server
        run: npm install --omit=optional --no-audit

      - name: Run server tests with coverage
        working-directory: server
        run: npm run test -- --coverage

      - name: SonarCloud Scan for Server
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: server
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_SERVER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Client Frontend Job
  client-analysis:
    name: Client - Build, Test, and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for SonarCloud

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        working-directory: client
        run: npm install --omit=optional --no-audit --legacy-peer-deps

      - name: Run client tests with coverage
        working-directory: client
        run: npm run test:coverage

      - name: SonarCloud Scan for Client
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: client
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_CLIENT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

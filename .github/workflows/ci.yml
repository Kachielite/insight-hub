name: CI with SonarCloud

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  # Server Backend Job
  server:
    name: Server - Build, Test, and Analyze
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for SonarCloud

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install server dependencies
        run: npm install --omit=optional --no-audit

      - name: Run server tests with coverage
        run: npm run test -- --coverage

      - name: SonarCloud Scan for Server
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: server
          args: >
            -Dsonar.projectKey=Kachielite_insight-hub
            -Dsonar.organization=kachielite
            -Dsonar.qualitygate.wait=true
            -Dsonar.scm.disabled=true
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=tests/**,**/*.spec.ts,**/*.test.ts,coverage/**,node_modules/**,dist/**,logs/**,generated/**,prisma/**,dto/**,common/**,configuration/**,**/*.js,**/*.json,**/*.yaml,**/*.yml,**/*.md,**/*.txt,**/*.log
            -Dsonar.exclusions=tests/**,**/*.spec.ts,**/*.test.ts,coverage/**,node_modules/**,dist/**,logs/**,generated/**,prisma/**,dto/**,common/**,configuration/**,**/*.js,**/*.json,**/*.yaml,**/*.yml,**/*.md,**/*.txt,**/*.log
            -Dsonar.sources=.
            -Dsonar.verbose=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Client Frontend Job
  client:
    name: Client - Build, Test, and Analyze
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for SonarCloud

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        run: npm install --omit=optional --no-audit

      - name: Run client tests with coverage
        run: npm run test:coverage

      - name: SonarCloud Scan for Client
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: client
          args: >
            -Dsonar.projectKey=Kachielite_insight-hub-client
            -Dsonar.organization=kachielite
            -Dsonar.qualitygate.wait=true
            -Dsonar.scm.disabled=true
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.sources=src
            -Dsonar.inclusions=domain/**/*,data/**/*
            -Dsonar.exclusions=presentation/**/*,**/assets/**/*,**/public/**/*,**/*.test.*,**/*.spec.*,node_modules/**/*,coverage/**/*,dist/**/*,**/setupTests.ts,**/main.tsx,**/vite-env.d.ts
            -Dsonar.coverage.exclusions=presentation/**/*,**/*.test.*,**/*.spec.*,**/tests/**/*,**/setupTests.ts,**/main.tsx,**/vite-env.d.ts
            -Dsonar.tests=tests
            -Dsonar.test.inclusions=**/*.test.*,**/*.spec.*
            -Dsonar.coverage.line.threshold=80
            -Dsonar.coverage.branch.threshold=70
            -Dsonar.verbose=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

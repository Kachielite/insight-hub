name: CI Pipeline

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  test-server:
    name: Test Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-js-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install server dependencies
        run: |
          cd server
          npm ci

      - name: Run server tests with coverage
        run: |
          cd server
          npm run test:coverage

      - name: Upload server coverage to SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: server
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test-client:
    name: Test Client
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-js-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        run: |
          cd client
          npm ci

      - name: Build client
        run: |
          cd client
          npm run build

      - name: Run client tests (if available)
        run: |
          cd client
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            npm run test
          else
            echo "No tests configured for client"
          fi

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-js-version: '18'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Install server dependencies for linting
        run: |
          cd server
          npm ci

      - name: Run server linting
        run: |
          cd server
          if [ -f "package.json" ] && grep -q '"lint"' package.json; then
            npm run lint
          else
            echo "No lint script configured for server"
          fi
